name: Push

on:
  workflow_dispatch:
    inputs:
      package:
        description: "Package"
        required: true
        default: all
        type: choice
        options:
          - fluentd
          - ipsec
          - keydb
          - mongodb
          - mongosqld
          - mongosync
          - nginx-openresty
          - openvpn
          - pgbouncer
          - postgresql
          - skopeo
          - supercronic
          - tabix
          - tinyproxy
          - ytt
          - all

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  packages:
    name: List packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.package.outputs.packages || steps.filter.outputs.changes }}
    permissions:
      pull-requests: read
    steps:
      - name: Checkout
        if: ${{ (inputs.package == 'all') }}
        uses: actions/checkout@v4

      - name: Check changes
        if: ${{ (inputs.package == 'all') }}
        uses: dorny/paths-filter@v3
        id: filter
        with:
          # make list | xargs -n1 | xargs -L 1 -I {} -R 2 echo "{}: [{}/**]" > .github/packages.yaml
          filters: .github/packages.yaml
      - name: Set packages
        if: ${{ (inputs.package != 'all') }}
        id: package
        run: echo "packages=[\"${{ inputs.package }}\"]" >> "$GITHUB_OUTPUT"

  build-push:
    name: Release image
    timeout-minutes: 60
    needs: packages
    runs-on: Builder
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
        max-parallel: 2
        matrix:
          pkg: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0
      - name: Set up QEMU
        timeout-minutes: 2
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up docker buildx
        timeout-minutes: 2
        uses: docker/setup-buildx-action@v3

      - name: Github registry login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - name: Build image
        timeout-minutes: 15
        run: make package-${{ matrix.pkg }}
        env:
          PUSH: "true"
      - name: Sign image
        timeout-minutes: 5
        run: make cosign-${{ matrix.pkg }}

      - name: Clean old images
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ matrix.pkg }}
          package-type: container
          ignore-versions: latest
          min-versions-to-keep: 10
          delete-only-untagged-versions: 'true'
        continue-on-error: true
